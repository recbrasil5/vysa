(function () {
    "use strict";

    angular.module("vysaApp").controller('adminContactUsController',
        function ($scope, $location, metaDataService, notifierService, adContactUsDataDeliveryService) {

            loadForm();

            function loadForm() {
                setupScopeVars();
                getGridData(1);
            }

            function getGridData(pageNo) {

                pageNo = pageNo || $scope.pagination.current;

                handleDataCallback(adContactUsDataDeliveryService
                        .getGridViewFilter(pageNo,
                            $scope.recordsPerPage,
                            $scope.sort));
            }

            function handleDataCallback(promise) {
                promise.then(function (data) {
                    if (data.count > 0) {
                        $scope.gridData = data.inbox;

                        console.log('inbox[0]', JSON.stringify(data.inbox[0]))
                        if (data.inbox != null) {
                            for (var i = 0; i < data.inbox.length; i++) {
                                data.inbox[i].createdDateUtc = new Date(data.inbox[i].createdDateUtc).toLocaleString('en-US');
                            }
                        }
                        console.log('inbox[0]',JSON.stringify(data.inbox[0]))
                        $scope.totalRecords = data.count;
                        $scope.inbox = data.inbox;
                        togglePagingDisplaySettings(data.count);
                        $scope.noData = false;
                    } else {
                        $scope.totalRecords = 0;
                        $scope.noData = true;
                    }
                },
                    function (error) {
                        $scope.gridContent = false;
                        $scope.gridData = [];
                        console.log(error);
                        notifierService.error('There was an error loading the grid');
                    }
                );
            }

            function setupScopeVars() {
                $scope.gridContent = true;
                $scope.gridData = [];
                setupPagingScopeVars();
                $scope.gridHeaderItems = metaDataService.getContactUsGridHeaders;
            }

            function setupPagingScopeVars() {
                $scope.totalRecords = 0;
                $scope.recordsPerPage = 15;
                $scope.pagination = { current: 1 };
                $scope.sort = {
                    column: '',
                    ascending: false //default setting for Id
                };
            }

            function togglePagingDisplaySettings(count) {
                if (count > 50) {
                    $scope.equals100Records = true;
                    $scope.under50Records = true;
                    $scope.under25Records = true;
                    $scope.under15Records = true;
                } else if (count > 25) {
                    $scope.equals100Records = false;
                    $scope.under50Records = true;
                    $scope.under25Records = true;
                    $scope.under15Records = true;
                } else if (count > 15) {
                    $scope.equals100Records = false;
                    $scope.under50Records = false;
                    $scope.under25Records = true;
                    $scope.under15Records = true;
                } else if (count < 15) {
                    $scope.equals100Records = false;
                    $scope.under50Records = false;
                    $scope.under25Records = false;
                    $scope.under15Records = false;
                }
            }

            $scope.delete = function (playerId) {
                AdminPlayerRepository.players.delete({ id: parseInt(playerId) })
                    .$promise.then(function () {
                        notifierService.success('Record has been removed!');
                        getGridData(1);
                    }, function (error) {
                        notifierService.error('Ex: ' + error.message);
                    });
            };

            $scope.orderBy = function (column) {
                this.sort.column = column;
                this.sort.ascending = !this.sort.ascending;
                getGridData(1);
            }

            $scope.pageChanged = function (pageNo) {

                getGridData(pageNo);
            };

        });

}());