(function () {
    "use strict";

    angular
        .module("vysa")
        .controller('AdminSeasonSetupController',
        function ($scope, $routeParams, $location, notifierService, metaDataService, AdminSeasonRepository, AdminEventRepository) {

            var seasonId = $routeParams.id;
            $scope.editing = seasonId !== undefined

            var setSelectedYear = function (year) {
                for (var i = 0; i < $scope.years.length; i++) {
                    if ($scope.years[i] === year) {
                        $scope.season.year = $scope.years[i];
                    }
                }
            }

            var setSelectedSeason = function (seasonType) {
                for (var i = 0; i < $scope.seasonTypes.length; i++) {
                    if ($scope.seasonTypes[i] === seasonType) {
                        $scope.season.seasonTypeStr = $scope.seasonTypes[i];
                    }
                }
            }

            //metadata
            $scope.years = metaDataService.getYears();
            $scope.seasonTypes = metaDataService.getSeasonTypes();

            if ($scope.editing) {
                AdminSeasonRepository.get({ id: parseInt(seasonId) }, function (data) {
                    data.registrationDate = new Date(data.registrationDate);
                    data.startDate = new Date(data.startDate);
                    data.endDate = new Date(data.endDate);

                    for (var i = 0; i < data.eventList.length; i++) {
                        data.eventList[i].startDate = new Date(data.eventList[i].startDate);
                        data.eventList[i].endDate = new Date(data.eventList[i].endDate);
                    }
                    console.log(data);
                    $scope.season = data;
                    setSelectedYear(data.year);
                    setSelectedSeason(data.seasonTypeStr);
                });
            }

            $scope.create = function () {

                AdminSeasonRepository.save($scope.season, function (response) {
                    //$location.url('/Admin/Home/ClubManagement/SeasonManagement');
                    console.log(response);
                    $scope.season.id = response.id; //set season.id which is returned in response object
                    notifierService.success("The season has been created. You may now add Events and Teams to the season!");
                    $scope.editing = true;
                }, function (error) {
                    var duplicate = error.data.modelState.duplicate;
                    if (duplicate !== undefined) {
                        console.log(duplicate[0]);
                        notifierService.error("Error: " + duplicate[0]);
                    } else {
                        notifierService.error("Error while creating season!");
                    }
                });
            }

            $scope.save = function () {
                AdminSeasonRepository.update($scope.season, function () {
                    $location.url('/Admin/Home/ClubManagement'); //comment this line out while debugging so you don't move
                    notifierService.success("The season has been updated!");
                }, function () {
                    notifierService.error("Error while updating season!");
                }
                );
            }

            $scope.cancel = function () {
                $location.url('/Admin/Home/ClubManagement/SeasonManagement');
            }

            $scope.addNewEvent = function () {
                $location.url('/Admin/Home/ClubManagement/SeasonManagement/SeasonSetup/Events/-1/' + $scope.season.id);
            }

            $scope.deleteEvent = function (eventId) {
                AdminEventRepository.delete({ id: parseInt(eventId) })
                    .$promise.then(function () {
                        notifierService.success('Record has been removed!');
                        alert('Need to reload the Events by SeasonId');
                        //loadSeasonEvents($scope.season.id);
                    }, function (error) {
                        notifierService.error('Ex: ' + error.message);
                    });
            };

            $scope.addNewTeam = function () {
                $location.url('/Admin/Home/ClubManagement/SeasonManagement/SeasonSetup/TeamSetup/-1/' + $scope.season.id);
            }

            $scope.deleteTeam = function (teamId) {
                AdminTeamRepository.delete({ id: parseInt(teamId) })
                    .$promise.then(function () {
                        notifierService.success('Record has been removed!');
                        alert('Need to reload the Teams by SeasonId');
                        //loadSeasonTeams($scope.season.id);
                    }, function (error) {
                        notifierService.error('Ex: ' + error.message);
                    });
            };

        });

}());