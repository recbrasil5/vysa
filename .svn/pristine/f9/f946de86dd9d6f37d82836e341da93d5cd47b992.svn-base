using System;
using System.Collections.Generic;
using VYSA.Domain.Abstract;
using VYSA.Domain.Concrete;
using VYSA.Domain.Entities;
using VYSA.WebApi.Models;

namespace VYSA.WebApi.Services
{
    public class BoardService
    {
        private UnitOfWork unitOfWork;

        public BoardService(IUnitOfWork _unitOfWork)
        {
            this.unitOfWork = (UnitOfWork)_unitOfWork;
        }

        public IEnumerable<BoardMember> GetBoardMembers()
        {
            return unitOfWork.BoardMemberRepository.Get(b => b.IsActive);     
        }

        public BoardMemberDTO GetBoardMember(int id)
        {
            var boardMember = unitOfWork.BoardMemberRepository.GetByID(id);
            return boardMember == null ? null : boardMember.ConvertToDto();
        }

        public BoardMemberDTO UpdateBoardMember(BoardMemberDTO updatedBoardMemberDto, string lastUpdateBy)
        {
            var boardMember = unitOfWork.BoardMemberRepository.GetByID(updatedBoardMemberDto.Id);
            if (boardMember == null) return null;

            //do update
            boardMember.UpdateValuesFromDTO(updatedBoardMemberDto, lastUpdateBy, false);

            unitOfWork.BoardMemberRepository.Update(boardMember);
            unitOfWork.Save();

            return updatedBoardMemberDto;
        }

        public BoardMemberDTO AddBoardMember(BoardMemberDTO newBoardMemberDto, string lastUpdateBy)
        {
            BoardMember boardMember = new BoardMember().UpdateValuesFromDTO(newBoardMemberDto, lastUpdateBy, true);
            unitOfWork.BoardMemberRepository.Insert(boardMember);
            unitOfWork.Save();

            return boardMember.ConvertToDto();
        }

        public BoardMemberDTO SoftDeleteBoardMember(int id, string lastUpdateBy)
        {
            var boardMember = unitOfWork.BoardMemberRepository.GetByID(id);
            if (boardMember == null) return null;

            boardMember.IsActive = false;
            boardMember.LastUpdateUtc = DateTime.UtcNow;
            boardMember.LastUpdateBy = lastUpdateBy;
            unitOfWork.BoardMemberRepository.Update(boardMember);
            unitOfWork.Save();

            return boardMember.ConvertToDto();
        }
    }

}