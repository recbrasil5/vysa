(function () {
    "use strict";

    angular
        .module("admin")
        .directive('uiDate', function () {
            return {
                require: '?ngModel',
                link: function ($scope, element, attrs, controller) {
                    var originalRender, updateModel, usersOnSelectHandler;
                    if ($scope.uiDate == null) $scope.uiDate = {};
                    if (controller != null) {
                        updateModel = function (value, picker) {
                            return $scope.$apply(function () {
                                return controller.$setViewValue(element.datepicker("getDate"));
                            });
                        };
                        if ($scope.uiDate.onSelect != null) {
                            usersOnSelectHandler = $scope.uiDate.onSelect;
                            $scope.uiDate.onSelect = function (value, picker) {
                                updateModel(value);
                                return usersOnSelectHandler(value, picker);
                            };
                        } else {
                            $scope.uiDate.onSelect = updateModel;
                        }
                        originalRender = controller.$render;
                        controller.$render = function () {
                            originalRender();
                            return element.datepicker("setDate", controller.$viewValue);
                        };
                    }
                    return element.datepicker($scope.uiDate);
                }
            }
        });

    angular
        .module("admin")
        .directive('onlyDigits', function () {
            return {
                require: 'ngModel',
                restrict: 'A',
                link: function (scope, element, attr, ctrl) {
                    function inputValue(val) {
                        if (val) {
                            var digits = val.replace(/[^0-9.]/g, '');

                            if (digits !== val) {
                                ctrl.$setViewValue(digits);
                                ctrl.$render();
                            }
                            return parseFloat(digits);
                        }
                        return undefined;
                    }

                    ctrl.$parsers.push(inputValue);
                }
            };
        });

    angular
        .module("admin")
        .directive('ngConfirmClick', function () {
            return {
                priority: 1,
                terminal: true,
                link: function (scope, element, attr) {
                    var msg = attr.ngConfirmClick || "Are you sure?";
                    var clickAction = attr.ngClick;
                    // attr.ngClick = "";
                    element.bind('click', function (event) {
                        if (window.confirm(msg)) {
                            scope.$eval(clickAction)
                        }
                    });
                }
            };
        });

    /**
     * Angular File Upload
    * The ng-thumb directive
    * @author: nerv
    * @version: 0.1.2, 2014-01-09
    */
    angular
        .module("admin")
        .directive('ngThumb', ['$window', function ($window) {
            var helper = {
                support: !!($window.FileReader && $window.CanvasRenderingContext2D),
                isFile: function (item) {
                    return angular.isObject(item) && item instanceof $window.File;
                },
                isImage: function (file) {
                    var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';
                    return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;
                }
            };

            return {
                restrict: 'A',
                template: '<canvas/>',
                link: function (scope, element, attributes) {
                    if (!helper.support) return;

                    var params = scope.$eval(attributes.ngThumb);

                    if (!helper.isFile(params.file)) return;
                    if (!helper.isImage(params.file)) return;

                    var canvas = element.find('canvas');
                    var reader = new FileReader();

                    reader.onload = onLoadFile;
                    reader.readAsDataURL(params.file);

                    function onLoadFile(event) {
                        var img = new Image();
                        img.onload = onLoadImage;
                        img.src = event.target.result;
                    }

                    function onLoadImage() {
                        var width = params.width || this.width / this.height * params.height;
                        var height = params.height || this.height / this.width * params.width;
                        canvas.attr({ width: width, height: height });
                        canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);
                    }
                }
            };
        }]);
}());